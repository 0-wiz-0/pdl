--------------------------------------------------------------------------------

Doug Burke (07/11/00)
   - fixed test 7. Added a quick overview section to README.bpix. 
   - added $PPISBAD, $PPISGOOD, and $PPSETBAD macros - see IMPLEMENTATION.bpix
   - changed internal access to bad value data (see badvalue subs in bad.pd)
     to ensure that '$a = byte->badvalue * ones(byte,3,4)' returns a piddle
     of type byte.
   - Wahay - thanks to Christian, I've managed to get baddata() to propogate
     itself along to any children of a piddle. Now, what to do with the 
     parents of a piddle (see IMPLEMENTATION.bpix)?
Doug Burke (07/11/00)
   - tried using flags field in trans structure rather than adding a
     new element (ie bvalflag). didn't really work - see 
     IMPLEMENTATION.bpix for more comments.
   - The bad value support seems to work now on linux (probably failed due to
     an incorrect build).
   - I seem to have broken test 7 in t/bad.t. Added tests of Primitive's zcover
     since they fail.
   - flagged Primitive's intover as a 'HandleBad => 0' case - not tested.
   - added some musings on Tim Jenness' suggestion to use NaN (IEEE)
     support if available (see IMPLEMENTATION.bpix)
Doug Burke (07/10/00)
   - Three macros have been added to make writing pp code a LOT easier:
       $ISBAD, $ISGOOD, and $SETBAD. See IMPLEMENTATION.bpix
     Thanks to Tuomas for the suggestion.
   - bad values are now stored in a C structure, rather than a perl array
     This seems okay on Solaris but not Linux ...
   - isbad() and isgood() implemented as pp code rather than
     perl wrappers around '==' and '!='
Doug Burke (07/09/00)
   - initial CVS upload.
   - plenty to do, see the *.bpix files for some rudimentary info
